name: Build Application Processor

on:
  push:
    branches:
      - main
      - '**'  # Adjust as necessary for your workflow.

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Nix (Multi User Mode)
      run: |
        sh <(curl -L https://nixos.org/nix/install) --daemon
        . ~/.nix-profile/etc/profile.d/nix.sh

    - name: Verify Nix installation
      run: |
        nix-env --version

    - name: Cache Nix store
      uses: xxxxxxxxxxxxx@xx
      with:
        path: /nix/store
        key: ${{ runner.os }}-nix-${{ hashFiles('**/nix.lock') }}
        restore-keys: |
          ${{ runner.os }}-nix-
       

    - name: Setup project with shell.nix
      run: |
        . ~/.nix-profile/etc/profile.d/nix.sh
        nix-shell shell.nix --run "echo Nix shell environment setup complete"
    
    - name: Update Poetry Lock
      run: |
        . ~/.nix-profile/etc/profile.d/nix.sh
        nix-shell shell.nix --run "poetry lock --no-update"
       
    
    - name: Install Poetry
      run: |
        . ~/.nix-profile/etc/profile.d/nix.sh
        nix-shell shell.nix --run "poetry install"
    
    - name: Cache Poetry packages
      uses: xxxxxxxxxxxxx@xx
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    # Your build commands or scripts that require the environment set up by shell.nix
    - name: Build with Nix environment
      env:
        current_directory: ${{ github.workspace }}
      run: |
        . ~/.nix-profile/etc/profile.d/nix.sh
        nix-shell shell.nix --run "poetry install && poetry run ectf_build_ap -d '$current_directory' -on ap -p 123456 -c 2 -ids '0x11111124, 0x11111125' -b 'Test boot message' -t 0123456789abcdef -od build 2>build_errors.txt"

    - name: Upload error log
      if: failure() # Only runs if previous steps failed
      uses: actions/upload-artifact@v2
      with:
        name: error-log
        path: build_errors.txt
    
    - name: Upload Build Artifacts
      if: success() # Only runs if all previous steps succeeded
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          build/max78000.elf
          build/max78000.bin

